{"version":3,"sources":["components/Section/Section.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Section","title","children","className","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","required","React","Component","ContactList","contacts","onDelete","map","id","onClick","Filter","App","filter","formSubmit","friendName","some","alert","list","shortid","generate","changeFilter","target","getFilterSearch","normalizedFilter","toLowerCase","contact","includes","deleteContact","nameId","prev","prevProps","prevState","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","filterSearch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mYAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,oBAAIC,UAAU,QAAd,SAAuBF,IACtBC,K,YCHDE,G,kNACFC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,aAAe,SAAAC,GACf,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAgBN,EAAOK,K,EAGvBE,aAAe,SAAAJ,GACXA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,S,EAGTA,MAAQ,WACJ,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGtC,WACI,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACNM,EAA+BK,KAA/BL,aAAcL,EAAiBU,KAAjBV,aACtB,OACI,uBAAMQ,SAAUH,EAAcV,UAAU,OAAxC,UACI,wBAAOA,UAAU,QAAjB,+BAEI,uBACIA,UAAU,QACVgB,KAAK,OACLb,KAAK,OACLK,MAAOL,EACPc,SAAUZ,EACVa,QAAQ,yHACRpB,MAAM,kcACNqB,UAAQ,OAIhB,wBAAOnB,UAAU,QAAjB,6DAEI,uBACIA,UAAU,QACVgB,KAAK,MACLb,KAAK,SACLK,MAAOJ,EACPa,SAAUZ,EACVa,QAAQ,yFACRpB,MAAM,giBACNqB,UAAQ,OAIhB,wBAAQnB,UAAU,SAASgB,KAAK,SAAhC,gC,GAtDGI,IAAMC,YAmEVpB,I,MCpEA,SAASqB,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC9C,OACE,oBAAIxB,UAAU,OAAd,SACGuB,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,KACWC,EACT,wBACEJ,UAAU,cACVgB,KAAK,SACLW,QAAS,kBAAMH,EAASE,IAH1B,sBAFOA,Q,MCJF,SAASE,EAAT,GAAsC,IAAnBpB,EAAkB,EAAlBA,MAAOS,EAAW,EAAXA,SACvC,OACE,wBAAOjB,UAAU,eAAjB,kCAEE,uBACEA,UAAU,eACVQ,MAAOA,EACPS,SAAUA,EACVD,KAAK,OACLE,QAAQ,yHACRpB,MAAM,kcACNqB,UAAQ,O,UCNVU,E,4MACJ3B,MAAQ,CACNqB,SAAU,CACR,CAAEG,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAEhD0B,OAAQ,I,EAGVC,WAAa,YAAuB,IAApB5B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACd4B,EAAa7B,EACnB,GAAI,EAAKD,MAAMqB,SAASU,MAAK,qBAAG9B,OAAoB6B,KAClDE,MAAM,GAAD,OAAI/B,EAAJ,+BADP,CAKA,IAAMgC,EAAO,CACXT,GAAIU,IAAQC,WACZlC,OACAC,UAGF,EAAKK,UAAS,YAAmB,IAAhBc,EAAe,EAAfA,SACf,MAAO,CAAEA,SAAS,GAAD,mBAAMA,GAAN,CAAgBY,U,EAIrCG,aAAe,SAAChC,GACd,EAAKG,SAAS,CAAEqB,OAAQxB,EAAEiC,OAAO/B,S,EAGnCgC,gBAAkB,WAChB,MAA6B,EAAKtC,MAA1BqB,EAAR,EAAQA,SACFkB,EADN,EAAkBX,OACcY,cAEhC,OAAOnB,EAASO,QAAO,SAACa,GAAD,OACrBA,EAAQxC,KAAKuC,cAAcE,SAASH,O,EAIxCI,cAAgB,SAACC,GACf,EAAKrC,UAAS,SAACsC,GAAD,MAAW,CACvBxB,SAAUwB,EAAKxB,SAASO,QAAO,SAACa,GAAD,OAAaA,EAAQjB,KAAOoB,U,wDAI/D,SAAmBE,EAAWC,GACxBlC,KAAKb,MAAMqB,WAAa0B,EAAU1B,UACpC2B,aAAaC,QAAQ,WAAYC,KAAKC,UAAUtC,KAAKb,MAAMqB,a,+BAI/D,WACE,IAAMA,EAAW2B,aAAaI,QAAQ,YAChCC,EAAiBH,KAAKI,MAAMjC,GAE9BgC,GACFxC,KAAKN,SAAS,CAACc,SAAUgC,M,oBAI7B,WACE,IAAME,EAAe1C,KAAKyB,kBAC1B,OACE,sBAAKxC,UAAU,YAAf,UACE,cAAC,EAAD,CAASF,MAAM,YAAf,SACE,cAAC,EAAD,CAAMe,SAAUE,KAAKgB,eAEvB,eAAC,EAAD,CAASjC,MAAM,WAAf,UACE,cAAC,EAAD,CACEU,MAAOO,KAAKb,MAAM4B,OAClBb,SAAUF,KAAKuB,eAEjB,cAAC,EAAD,CACEf,SAAUkC,EACVjC,SAAUT,KAAK8B,0B,GA7ETzB,IAAMC,WAqFTQ,ICxFf6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a41223f9.chunk.js","sourcesContent":["import propTypes from \"prop-types\";\r\nimport './Section.css'\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className=\"title\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n  children: propTypes.any,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport './Form.css'\r\n\r\nclass Form extends React.Component{\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n    const { name, value } = e.currentTarget\r\n    this.setState({[name]: value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        const { handleSubmit, handleChange } = this;\r\n        return (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n                <label className=\"label\">\r\n                    Имя\r\n                    <input\r\n                        className=\"input\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                \r\n                <label className=\"label\">\r\n                    Телефона\r\n                    <input\r\n                        className=\"input\"\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                \r\n                <button className=\"button\" type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n    handleChange: PropTypes.func,\r\n    handleSubmit: PropTypes.func\r\n}\r\n\r\nexport default Form;","import PropTypes from \"prop-types\";\r\nimport './ContactList.css'\r\n\r\nexport default function ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul className=\"list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className=\"button-list\"\r\n            type=\"button\"\r\n            onClick={() => onDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number\r\n}","import PropTypes from \"prop-types\";\r\nimport './Filter.css'\r\n\r\nexport default function Filter ({ value, onChange }){\r\n  return (\r\n    <label className=\"filter-label\">\r\n      Find contacts by name\r\n      <input\r\n        className=\"filter-input\"\r\n        value={value}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func\r\n}","import React from 'react';\nimport shortid from 'shortid';\nimport Section from './components/Section/Section';\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport './App.css'\n\nclass App extends React.Component{\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n  \n  formSubmit = ({ name, number }) => {\n    const friendName = name;\n    if (this.state.contacts.some(({ name }) => name === friendName)) {\n      alert(`${name} is already in contact`);\n      return;\n    }\n    \n    const list = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n    \n    this.setState(({ contacts }) => {\n      return { contacts: [...contacts, list] }\n    })\n  }\n  \n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value })\n  }\n\n  getFilterSearch = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    \n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    )\n  }\n\n  deleteContact = (nameId) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== nameId),\n    }))\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n\n    if (parsedContacts) {\n      this.setState({contacts: parsedContacts})\n    }\n  }\n\n  render() {\n    const filterSearch = this.getFilterSearch();\n    return (\n      <div className=\"conteiner\">\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.formSubmit} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter\n            value={this.state.filter}\n            onChange={this.changeFilter}\n          />\n          <ContactList\n            contacts={filterSearch}\n            onDelete={this.deleteContact}\n          />\n        </Section>\n      </div>\n    )\n  }\n}\n           \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}